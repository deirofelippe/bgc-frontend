2 - 

"​O desafio vai ser criar um site responsivo para clientes poderem reservar a compra debonecos minions em miniatura. O intuito é que seja um site simples, basicamente umalanding page com a descrição dos produtos e um formulário para o cliente fazer a reservado(s) seu(s) minions. Quando a reserva for feita, um email deve ser disparado para o clientee para o email ​thiago@bgcbrasil.com.br​ com os dados preenchidos. Fique a vontade parapensar no texto e no layout."

pagina q lista bonecos; pagina de formulario p usuario frz a reserva do boneco minion; quando a reserva for feita, deve ser disparada um email o cliente e p 'thiago@bgcbrasil.com.br' com os dados preenchidos; responsivo;

funcionalidades como: login; historico de compras; carrinho;

serverless framework, aws (lambda, api gateway, s3), react, redux (se precisar)

td com nodejs
dynamodb - nosql
cognito - login e autorizacao
step functions - controle de fluxo

========================


produto(id, nome, descricao, preco)
usuario(id, nome, email, endereco, tipo[admin, cliente])
reserva(idProduto, idUsuario, quantidade)

    CLIENTE
V1
    1 - lista os produtos
    2 - abrir a pagina do produto
    3 - comprar 1 produto (pela pagina de listagem ou a do produto)
        3.1 - verificar se o usuario tem cadastro para fazer a reserva
    4 - finalizar a reserva
    5 - api envia um email com os dados do usuario e da reserva pro o email do usuario e pro 'thiago@bgcbrasil.com.br'
    6 - um usuario pode se cadastrar, cadastrar um produto e fazer reserva
V2
    1 - adicionar o produto no carrinho de reservas 
        1.1 - so pode comprar se fazer login
    2 - cliente se cadastra
    3 - admin cadastra produto e outro admin
V3
    1 - lista a quantidade de reservas e lucros em um determinado espaço de tempo
    2 - lista o historico das reservas
    3 - adicionar o produto na lista de desejos
    4 - filtrar o produto na listagem
    5 - home lista os produtos mais procurados, comprados e avaliados

    ENDPOINTS
GET /

GET /produtos
GET /produto/formulario
GET /produto/:id
POST /produto
DELETE /produto/:id
PUT /produto/:id

GET /usuarios
GET /usuario/formulario
GET /usuario/:id
POST /usuario/
DELETE /usuario/:id
PUT /usuario/:id

GET /usuario/lista-de-desejos

GET /reserva
GET /reserva/carrinho
GET /reserva/historico
POST /reserva


login -> cadastro de reserva e produto
fazer login ou cadastrar -> consegue cadastrar outros admin, fazer reserva, deletar usuarios e produtos
so da p cadastrar um usuario de fizer logout ou ser admin

usuario = {
   ...dados,
   endereço: {
      ...dados
   }, 
   login,
   senha,
   email,
}

login = {
   id, email, senha
}